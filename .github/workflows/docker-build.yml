name: Build and Push Docker Images

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'actions/**'
      - 'data/**'
      - 'config.yml'
      - 'domain.yml'
      - 'docker/**'
      - 'requirements.txt'
  pull_request:
    branches: [ main ]

env:
  # Docker Hub settings (default)
  DOCKERHUB_REGISTRY: docker.io  # Legacy - use DOCKERHUB_REGISTRY
  DOCKERHUB_USERNAME: socrates12345
  # ACR settings
  ACR_REGISTRY: healthidpuaeacr.azurecr.io
  ACR_NAME: healthidpuaeacr
  # Default registry selection
  DEFAULT_REGISTRY: dockerhub  # or "acr" or "both"
  # Legacy variables for backward compatibility
  REGISTRY: docker.io  # Legacy - use DOCKERHUB_REGISTRY
  DOCKER_USERNAME: socrates12345
  RASA_IMAGE_NAME: socrates12345/chat-template-rasa
  ACTIONS_IMAGE_NAME: socrates12345/chat-template-actions

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME || env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD || secrets.DOCKER_TOKEN }}

    - name: Extract metadata for Rasa
      id: meta-rasa
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.RASA_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract metadata for Actions
      id: meta-actions
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.ACTIONS_IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Rasa image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.rasa
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-rasa.outputs.tags }}
        labels: ${{ steps.meta-rasa.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push Actions image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./docker/Dockerfile.actions
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta-actions.outputs.tags }}
        labels: ${{ steps.meta-actions.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install rasa
        
    - name: Validate Rasa files
      run: |
        rasa data validate
        
    - name: Test with Docker Compose
      run: |
        docker-compose up -d
        sleep 60
        # Simple health check
        curl -f http://localhost:5005/ || exit 1
        # Test actions server webhook endpoint
        curl -X POST http://localhost:5055/webhook \
          -H "Content-Type: application/json" \
          -d '{"next_action": "action_listen", "tracker": {"sender_id": "test"}}' || exit 1
        docker-compose down
